
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.8.3
      #   environment:
      #     DB_DATABASE: MySQL
      #     DB_USER: root
      #     DB_PASSWORD: 
      #     DB_HOST: 127.0.0.1
      #     DB_PORT: 3306
      # - image: circleci/mysql:8.0.20
      #   environment:
          # MYSQL_ALLOW_EMPTY_PASSWORD: true
          # MYSQL_ROOT_PASSWORD: Kmvanesa@22
          # MYSQL_DATABASE: MySQL
          # MYSQL_USER: root
          # MYSQL_PASSWORD: Kmvanesa@22
          # MYSQL_HOST: 127.0.0.1
          # MYSQL_PORT: 3306
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: Abhi
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: 0072707
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      # - run:
      #     command: |
      #       for i in `seq 1 10`;
      #       do
      #         nc -z 127.0.0.1 3306 && echo Success && exit 0
      #         echo -n .
      #         sleep 1
      #       done
      #       echo Failed waiting for MySQL && exit 1
      # - run:
      #     name: Install MySQL CLI; Import dummy data; run an example query
      #     command: |
      #       sudo apt-get install default-mysql-client
      #       mysql -h 127.0.0.1 -u root  MySQL
      - run: sudo apt-get install postgresql-client
      - run:
          name: Waiting for PostgreSQL to start
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 2
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      # - run:
      #     name: Setup the database
      #     command: psql -h localhost -p 5432 -U chief_kmv -d Kmvanesa -a -f schema.sql
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            python3 manage.py test
      - store_artifacts:
          path: test-reports/
          destination: python_app
